/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Imebra
 #	author : miyako
 #	2016/12/06
 #
 # --------------------------------------------------------------------------------*/

#include "iconv.h"
#include <imebra/imebra.h>
#include <list>

#include "libpng16/png.h"

#define INCHES_PER_METER (100.0/2.54)

// --- Imebra
void Imebra_Get_images(PA_PluginParameters params);

void write_data_fn(png_structp png_ptr, png_bytep buf, png_size_t size);
void output_flush_fn(png_structp png_ptr);

typedef enum image_formats
{
    image_format_bmp = 0,
    image_format_png = 1,
    image_format_jpg = 2
};

#pragma pack(1)  // ensure structure is packed
struct bitmap_file_header {
    unsigned char   bitmap_type[2];     // 2 bytes
    int             file_size;          // 4 bytes
    short           reserved1;          // 2 bytes
    short           reserved2;          // 2 bytes
    unsigned int    offset_bits;        // 4 bytes
} bfh;
// bitmap image header (40 bytes)
struct bitmap_image_header {
    unsigned int    size_header;        // 4 bytes
    unsigned int    width;              // 4 bytes
    unsigned int    height;             // 4 bytes
    short int       planes;             // 2 bytes
    short int       bit_count;          // 2 bytes
    unsigned int    compression;        // 4 bytes
    unsigned int    image_size;         // 4 bytes
    unsigned int    ppm_x;              // 4 bytes
    unsigned int    ppm_y;              // 4 bytes
    unsigned int    clr_used;           // 4 bytes
    unsigned int    clr_important;      // 4 bytes
} bih;
#pragma pack(0)  // restore normal structure packing rules

#define sizeof_bitmap_file_header 14
#define sizeof_bitmap_image_header 40

